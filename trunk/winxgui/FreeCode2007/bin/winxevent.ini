[event]
winxver = 1.1.08
kind = 18
item = 128

[kind]
1=Create/Close
5=Reflect
6=Drag
7=Command
8=Paint
9=Menu
10=WindowPosChange
11=SettingChange
12=ActiveView
13=MouseEvent
14=Scroll
15=Keyboard
16=Timer
17=Accel
18=Handle

<item>
name = OnClose
kind = 1
func = void winx_msg OnClose(HWND hWnd)
body = 
help = Signals a window or application to terminate
</item>

<item>
name = OnDestroy
kind = 1
func = void winx_msg OnDestroy(HWND hWnd)
body = 
help = Indicates window is about to be destroyed
</item>

<item>
name = OnNcDestroy
kind = 1
func = void winx_msg OnNcDestroy(HWND hWnd)
body = 
help = Indicates when nonclient area is begin destroyed
</item>

<item>
name = OnFinalMessage
kind = 
func = void winx_msg OnFinalMessage(HWND hWnd)	
body =
help =
</item>

<item>
name = OnNcCreate
kind = 1
func = BOOL winx_msg OnNcCreate(HWND hWnd, LPCREATESTRUCT lpCS)
body = return TRUE;
help = Indicates a nonclient area is being created
</item>

<item>
name = OnCreate
kind = 1
func = LRESULT winx_msg OnCreate(HWND hWnd, LPCREATESTRUCT lpCS)
body = return 0;
help = 
</item>

<item>
name = SuperOnCreate
kind = 1
func = LRESULT winx_msg SuperOnCreate(HWND hWnd, LPCREATESTRUCT lpCS)
body = return 0;
help =
</item> 

<item>
name = OnSubclass
kind = 1
func = LRESULT winx_msg OnSubclass(HWND hWnd)
body = return 0;
help = 
</item>

<item>
name = OnUnsubclass
kind = 1
func = LRESULT winx_msg OnSubclass(HWND hWnd)
body =
help =
</item>

<item>
name = OnDlgInitCreateAxCtrl
kind = 1
func = HRESULT winx_msg OnDlgInitCreateAxCtrl(HWND hDlg)
body = return S_OK;
help =
</item>

<item>
name = OnInitDialog
kind = 1
func = BOOL winx_msg OnInitDialog(HWND hDlg, HWND hDefaultFocus)
body = return TRUE;
help =
</item>

<item>
name = OnPostInitDialog
kind = 1
func = void winx_msg OnPostInitDialog(HWND hDlg)
body =
help =
</item>

<item>
name = OnEnterAccelFrame
kind = 17
func = void winx_msg OnEnterAccelFrame(HWND hWnd)
body =
help =
</item>

<item>
name = OnLeaveAccelFrame
kind = 17
func = void winx_msg OnLeaveAccelFrame(HWND hWnd)
body =
help =
</item>

<item>
name = DrawItem
kind = 5
func = void winx_msg DrawItem(HWND hWnd, PDRAWITEMSTRUCT lpDI)
body =
help =
</item>

<item>
name = MeasureItem
kind = 5
func = void winx_msg MeasureItem(HWND hWnd, LPMEASUREITEMSTRUCT lpMI)
body =
help =
</item>

<item>
name = OnReflectCommand
kind = 5
func = BOOL winx_msg OnReflectCommand(HWND hWnd, WPARAM wParam)
body = return FALSE;
help =
</item>

<item>
name = OnReflectNotify
kind = 5
func = BOOL winx_msg OnReflectNotify(HWND hWnd, LPNMHDR pnmh, LRESULT* pResult)
body = return FALSE;
help =
</item>

<item>
name = OnQueryDragIcon
kind = 6
func = HCURSOR winx_msg OnQueryDragIcon(HWND hWnd)
body = return NULL
help =
</item>

<item>
name = OnSysCommand
kind = 7
func = BOOL winx_msg OnSysCommand(HWND hWnd, WPARAM wParam, LPARAM lParam)
body = return FALSE;
help =
</item>

<item>
name = OnCommand
kind = 7
func = BOOL winx_msg OnCommand(HWND hWnd, WPARAM wParam, HWND hWndCtlFrom)
body = return FALSE;
help =
</item>

<item>
name = OnOK
kind = 7
func = void winx_msg OnOK(HWND hWnd)
body =
help =
</item>

<item>
name = OnNotify
kind = 7
func = BOOL winx_msg OnNotify(HWND hWnd, int idCtrl, LPNMHDR pnmh, LRESULT* pResult)
body = return FALSE;
help =
</item>

<item>
name = OnParentNotify
kind = 7
func = void winx_msg OnParentNotify(HWND hWnd, WPARAM wParam, LPARAM lParam)
body =
help =
</item>

<item>
name = OnDrawItem
kind = 7
func = BOOL winx_msg OnDrawItem(HWND hWnd, int nIdCtrl, LPDRAWITEMSTRUCT lpDI)
body = return FALSE;
help =
</item>

<item>
name = OnMeasureItem
kind = 7
func = BOOL winx_msg OnMeasureItem(HWND hWnd, int nIdCtrl, LPMEASUREITEMSTRUCT lpMI)
body = return FALSE;
help =
</item>

<item>
name = DragList_OnBeginDrag
kind = 6
func = BOOL winx_msg DragList_OnBeginDrag(HWND hWnd, int idCtrl, LPDRAGLISTINFO lpDLI)
body = return TRUE; // allow dragging
help =
</item>

<item>
name = DragList_OnDragging
kind = 6
func = LONG winx_msg DragList_OnDragging(HWND hWnd, int idCtrl, LPDRAGLISTINFO lpDLI)
body = return DL_CURSORSET; // don't change cursor
help =
</item>

<item>
name = DragList_OnCancelDrag
kind = 6
func = void winx_msg DragList_OnCancelDrag(HWND hWnd, int idCtrl, LPDRAGLISTINFO lpDLI)
body =
help =
</item>

<item>
name = DragList_OnDropped
kind = 6
func = void winx_msg DragList_OnDropped(HWND hWnd, int idCtrl, LPDRAGLISTINFO lpDLI)
body =
help =
</item>

<item>
name = OnDragListNotify
kind = 6
func = LRESULT winx_msg OnDragListNotify(HWND hWnd, int idCtrl, LPDRAGLISTINFO lpDLI)
body = return 0;
help =
</item>

<item>
name = OnDraw
kind = 8
func = void winx_msg OnDraw(HWND hWnd, HDC hDC)
body =
help =
</item>

<item>
name = OnDrawEx
kind = 8
func = void winx_msg OnDrawEx(HWND hWnd, HDC hDC, const RECT& rcPaint)
body = 
help =
</item>

<item>
name = OnDrawBkgnd
kind = 8
func = void winx_msg OnDrawBkgnd(HWND hWnd, HDC hDC, const RECT& rcPaint)
body = 
help = 
</item>

<item>
name = OnPaint
kind = 8
func = void winx_msg OnPaint(HWND hWnd)
body = 
help = 
</item>

<item>
name = OnNcPaint
kind = 8
func = void winx_msg OnNcPaint(HWND hWnd, HRGN hrgnClip)
body = 
help = 
</item>

<item>
name = OnXPThemeNcPaint
kind = 8
func = BOOL winx_msg OnXPThemeNcPaint(HWND hWnd, HRGN hrgnClip)
body = return FALSE;
help = 
</item>

<item>
name = OnNcCalcSize
kind = 8
func = void winx_msg OnNcCalcSize(HWND hWnd, BOOL bCalcValidRects, NCCALCSIZE_PARAMS& ncsp) 
body = 
help = 
</item>

<item>
name = GetBkgndBrush
kind = 8
func = HBRUSH winx_call GetBkgndBrush() const
body = return NULL;
help = 
</item>

<item>
name = OnEraseBkgnd
kind = 8
func = BOOL winx_msg OnEraseBkgnd(HWND hWnd, HDC hDC)
body = return FALSE;
help = 
</item>

<item>
name = OnContextMenu
kind = 9
func = void winx_msg OnContextMenu(HWND hWnd, winx::CPoint pos)
body = 
help = 
</item>

<item>
name = OnInitMenuPopup
kind = 9
func = void winx_msg OnInitMenuPopup(HWND hWnd, HMENU hMenu, LPARAM lParam)
body = 
help = 
</item>

<item>
name = OnWindowPosChanged
kind = 10
func = void winx_msg OnWindowPosChanged(HWND hWnd, const WINDOWPOS& wndPos)
body = 
help = 
</item>

<item>
name = OnWindowPosChanging
kind = 10
func = void winx_msg OnWindowPosChanging(HWND hWnd, WINDOWPOS& wndPos)
body = 
help = 
</item>

<item>
name = OnGetMinMaxInfo
kind = 10
func = void winx_msg OnGetMinMaxInfo(HWND hWnd, LPMINMAXINFO lpMM)
body = 
help = 
</item>

<item>
name = OnSettingChange
kind = 11
func = void winx_msg OnSettingChange(HWND hWnd, UINT uFlags, LPCTSTR lpszSection)
body = 
help = 
</item>

<item>
name = OnThemeChanged
kind = 11
func = void winx_msg OnThemeChanged(HWND hWnd)
body = 
help = 
</item>

<item>
name = OnCtlColor
kind = 8
func = HBRUSH winx_msg OnCtlColor(HWND hWnd, HDC hDC, HWND hWndCtrl, UINT nCtlColor)
body = return NULL;
help = 
</item>

<item>
name = OnSetFocus
kind = 12
func = BOOL winx_msg OnSetFocus(HWND hWnd, HWND hWndPrevFocus)	
body = return FALSE;
help = 
</item>

<item>
name = OnKillFocus
kind = 12
func = BOOL winx_msg OnKillFocus(HWND hWnd, HWND hWndNewFocus)
body = 
help = 
</item>

<item>
name = OnEnable
kind = 12
func = void winx_msg OnEnable(HWND hWnd, BOOL fEnable)
body = 
help = 
</item>

<item>
name = OnMouseMove
kind = 13
func = void winx_msg OnMouseMove(HWND hWnd, UINT nFlags, winx::CPoint point)
body = 
help = 
</item>

<item>
name = OnLButtonDown
kind = 13
func = void winx_msg OnLButtonDown(HWND hWnd, UINT nFlags, winx::CPoint point)
body = 
help = 
</item>

<item>
name = OnLButtonUp
kind = 13
func = void winx_msg OnLButtonUp(HWND hWnd, UINT nFlags, winx::CPoint point)
body = 
help = 
</item>

<item>
name = OnLButtonDblClk
kind = 13
func = void winx_msg OnLButtonDblClk(HWND hWnd, UINT nFlags, winx::CPoint point)
body = 
help = 
</item>

<item>
name = OnRButtonDown
kind = 13
func = void winx_msg OnRButtonDown(HWND hWnd, UINT nFlags, winx::CPoint point)
body = 
help = 
</item>

<item>
name = OnRButtonUp
kind = 13
func = void winx_msg OnRButtonUp(HWND hWnd, UINT nFlags, winx::CPoint point)
body = 
help = 
</item>

<item>
name = OnRButtonDblClk
kind = 13
func = void winx_msg OnRButtonDblClk(HWND hWnd, UINT nFlags, winx::CPoint point)
body = 
help = 
</item>

<item>
name = OnMouseWheel
kind = 13
func = void winx_msg OnMouseWheel(HWND hWnd, UINT nFlags, INT zDelta, winx::CPoint point) 
body = 
help = 
</item>

<item>
name = OnSetCursor
kind = 13
func = BOOL winx_msg OnSetCursor(HWND hWnd, HWND hWndContainsCursor, UINT nHitTest, UINT uMouseMsg)
body = return FALSE;
help = 
</item>

<item>
name = OnNcHitTest
kind = 13
func = UINT winx_msg OnNcHitTest(HWND hWnd, winx::CPoint point)
body = return HTNOWHERE;
help = 
</item>

<item>
name = OnHScroll
kind = 14
func = void winx_msg OnHScroll(HWND hWnd, UINT nSBCode, INT nPos, HWND hWndScrollBar)
body = 
help = 
</item>

<item>
name = OnVScroll
kind = 14
func = void winx_msg OnVScroll(HWND hWnd, UINT nSBCode, INT nPos, HWND hWndScrollBar)	
body = 
help = 
</item>

<item>
name = OnChar
kind = 15
func = void winx_msg OnChar(HWND hWnd, UINT uChar, UINT uKeyData)
body = 
help = 
</item>

<item>
name = OnKeyDown
kind = 15
func = void winx_msg OnKeyDown(HWND hWnd, UINT uVKChar, UINT uKeyData)
body = 
help = 
</item>

<item>
name = OnKeyUp
kind = 15
func = void winx_msg OnKeyUp(HWND hWnd, UINT uVKChar, UINT uKeyData)
body = 
help = 
</item>

<item>
name = OnSysKeyDown
kind = 15
func = void winx_msg OnSysKeyDown(HWND hWnd, UINT uVKChar, UINT uKeyData)
body = 
help = 
</item>

<item>
name = OnSysKeyUp
kind = 15
func = void winx_msg OnSysKeyUp(HWND hWnd, UINT uVKChar, UINT uKeyData)
body = 
help = 
</item>

<item>
name = OnTimer
kind = 16
func = void winx_msg OnTimer(HWND hWnd, UINT nIDEvent)
body = 
help = 
</item>

<item>
name = OnIdle
kind = 16
func = void winx_msg OnIdle(HWND hWnd)
body = 
help = 
</item>

<item>
name = TestTranslateAccel
kind = 17
func = BOOL winx_msg TestTranslateAccel(HWND hWnd, LPMSG lpMsg)
body = return CanTranslateAccel; //return CannotTranslateAccel; 
help = 
</item>

<item>
name = OnTranslateAccel
kind = 17
func = BOOL winx_msg OnTranslateAccel(HWND hWnd, LPMSG lpMsg)
body = return FALSE;
help = 
</item>

<item>
name = HandleUpdateViews
kind = 18
func = void winx_msg HandleUpdateViews(HWND hWnd)
body = 
help = 
</item>

<item>
name = PreHandleMessage 
kind = 18
func = BOOL winx_msg PreHandleMessage(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam, LRESULT* pResult)
body = return FALSE;
help = 
</item>

<item>
name = ProcessUserMessage
kind = 18
func = BOOL winx_call ProcessUserMessage(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam, LRESULT& lResult)
body = return FALSE;
help = 
</item>

<item>
name = HandleMessage 
kind = 18
func = LRESULT winx_msg HandleMessage(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)
body = WINX_REPORT("HandleMessage - Don't call me!!!\n"); return 0;
help = 
</item>

<item>
name = DefaultHandle
kind = 18
func = LRESULT winx_msg DefaultHandle(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)
body = WINX_REPORT("DefaultHandle - Don't call me!!!\n"); return 0;
help = 
</item>
