////////////////////////////////////////////////////////////////////////////////
//
// Copyright (c) 2004 Sergey Solozhentsev
// Author: 	Sergey Solozhentsev e-mail: salos@mail.ru
// Product:	WTL Helper
// File:      	AboutDlg.cpp
// Created:	22.12.2004 12:11
// 
//   Using this software in commercial applications requires an author
// permission. The permission will be granted to everyone excluding the cases
// when someone simply tries to resell the code.
//   This file may be redistributed by any means PROVIDING it is not sold for
// profit without the authors written consent, and providing that this notice
// and the authors name is included.
//   This file is provided "as is" with no expressed or implied warranty. The
// author accepts no liability if it causes any damage to you or your computer
// whatsoever.
//
////////////////////////////////////////////////////////////////////////////////

// This file was generated by WTL Dialog wizard 
// AboutDlg.cpp : Implementation of CAboutDlg

#include "stdafx.h"
#include "AboutDlg.h"
#include "verinfo.h"

// CAboutDlg
CAboutDlg::CAboutDlg() : m_hBitmapLogo(NULL)
{
}

CAboutDlg::~CAboutDlg()
{
	if (m_hBitmapLogo)
		DeleteObject(m_hBitmapLogo);
}

LRESULT CAboutDlg::OnInitDialog(UINT uMsg, WPARAM wParam, LPARAM lParam, BOOL& bHandled)
{
	m_hBitmapLogo = ::LoadBitmap(_AtlModule.GetResourceInstance(), MAKEINTRESOURCE(IDB_BITMAP_LOGO));
	if (m_hBitmapLogo)
	{
		GetDlgItem(IDC_STATIC_LOGO).SendMessage(STM_SETIMAGE, IMAGE_BITMAP, (LPARAM)m_hBitmapLogo);
		BITMAP bmp;
		GetObject(m_hBitmapLogo, sizeof(BITMAP), &bmp);

		CRect r, r1;
		GetDlgItem(IDC_STATIC_NAME).GetWindowRect(r1);
		ScreenToClient(r1);
		GetDlgItem(IDC_STATIC_LOGO).GetWindowRect(r);
		ScreenToClient(r);
		int Offset = r1.left - r.right - 2;

		GetWindowRect(r);
		GetParent().ScreenToClient(r);
		r.right += Offset;
		MoveWindow(r);
	}

	CFileVersionInfo info;
	if (info.Open(_AtlModule.GetResourceInstance()))
	{
		CString NameProduct;
		info.QueryStringValue(_T("ProductName"), NameProduct.GetBuffer(255), 255);
		NameProduct.ReleaseBuffer();
		CString VersionNumber;
		VersionNumber.Format(_T("%s %d.%d.%d.%d"), NameProduct, 
			info.GetProductVersionMajor(),
			info.GetFileVersionMinor(),
			info.GetProductVersionBuild(), 
			info.GetProductVersionQFE());
		SetDlgItemText(IDC_STATIC_NAME, VersionNumber);
		info.Close();
	}
	
	CString Depenednces;
	Depenednces.LoadString(IDS_DEPENDENCES);
	SetDlgItemText(IDC_EDIT_DEPENDENCES, Depenednces);
	m_DonateLink.SubclassWindow(GetDlgItem(IDC_STATIC_DONATE));
	m_DonateLink.SetHyperLink(_T("http://salos.narod.ru/eng/donate.html"));
	bool bREs= m_DonateLink.IsUsingToolTip();
	return TRUE;
}

LRESULT CAboutDlg::OnSetFocus(UINT uMsg, WPARAM wParam, LPARAM lParam, BOOL& bHandled)
{
	return 0;
}

LRESULT CAboutDlg::OnSize(UINT uMsg, WPARAM wParam, LPARAM lParam, BOOL& bHandled)
{
	if (wParam == SIZE_RESTORED)
	{
		CSize Size(LOWORD(lParam), HIWORD(lParam));
		CRect r1, r2, r3, r;
		GetDlgItem(IDC_STATIC_LOGO).GetWindowRect(r);
		ScreenToClient(r);
		int Left = r.right + 2;

		GetDlgItem(IDC_STATIC_NAME).GetWindowRect(r1);
		ScreenToClient(r1);
		r1.left = Left;
		r1.right = Size.cx - 2;
		GetDlgItem(IDC_STATIC_NAME).MoveWindow(r1);

		GetDlgItem(IDC_STATIC_COPYRIGHT).GetWindowRect(r2);
		ScreenToClient(r2);
		r2.left = Left;
		r2.right = Size.cx - 2;
		GetDlgItem(IDC_STATIC_COPYRIGHT).MoveWindow(r2);

		GetDlgItem(IDC_STATIC_DONATE).GetWindowRect(r2);
		ScreenToClient(r2);
		r2.left = Left;
		r2.right = Size.cx - 2;
		GetDlgItem(IDC_STATIC_DONATE).MoveWindow(r2);

		GetDlgItem(IDC_EDIT_DEPENDENCES).GetWindowRect(r3);
		ScreenToClient(r3);
		r3.left = Left;
		r3.right = Size.cx - 2;
		r3.bottom = Size.cy - 2;
		GetDlgItem(IDC_EDIT_DEPENDENCES).MoveWindow(r3);
	}
	return 0;
}