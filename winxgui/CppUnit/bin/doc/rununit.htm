<html>
<body>
<pre>功能：
	rununit程序是一个testcaseRunner，用于运行一个dll中的测试案例。
	
	以前，rununit不止会运行该dll的案例，也同时将运行该dll所依赖的所有dll中的案例。这是不期望的行为。
	
	现在，rununit将只会运行该dll本身的案例，并不运行所依赖的dll的案例。
	并且，你还可以进一步希望只执行某个TestCase，或者只是执行某个TestCase中的某个method。
	你不再需要为了只运行特定的TestCase，反复对一个TestCase进行注释、取消注释、再注释、再取消注释...


命令行：

<b>rununit testcase[.dll] [testclass] [testmethod] [/ndebug] [/pause] [/output:&lt;xmlfile&gt;]</b>


开关说明：

<b>/ndebug</b>
	进入自动化测试状态。
	
	在默认情况下，rununit假设处于调试状态，而非自动化脚本中。
	你可以通过指定/ndebug开关禁止这些对话框的弹出，以便进行自动化测试。
	这将利禁止所有<b>具备交互性的调试终端</b>（主要指断言对话框AssertDialog）。

<b>/pause</b>
	退出程序时暂停，等待用户敲入回车。

<b>/output:&lt;xmlfile&gt;</b>
	将输出以追加的方式重定向到指定的xml文件。如果该xml文件已经存在，则原先的内容不会被删除。
	例：指定参数 /output:test.xml 将输出信息追加到当前目录名为test.xml的文件中。
	
	在默认情况下，rununit输出到控制台（stderr），但是你可以使用/output开关进行重定向。
	注意，<b>/output:</b>与xml文件名之间不存在空格。


参数说明：

<b>testcase[.dll]</b>
	要进行测试的dll。关于在dll中书写测试案例，是我们准备推行的一个新的尝试。
	详细信息参考<a href="dllunit_index.htm">在dll中书写测试案例</a>。

<b>testclass</b>
	要测试的TestCase类。如果不指定该参数，将测试dll中所有的TestCase。

<b>testmethod</b>
	要测试的函数。如果不指定该参数，将测试要测试的TestCase中的所有method。
	

相关程序：
	<a href="rununits.htm">rununits程序</a>
	
</pre>
</body>
</html>
